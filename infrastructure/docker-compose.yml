version: '2'

#networks:
#  front:
#    driver: overlay
#  back:
#    driver: overlay

services:
  consul:
    build:
      context: ./dockerfiles/consul
      dockerfile: Dockerfile
    hostname: consul
    ports:
      - "8500:8500"
    volumes:
      - /etc/consul.d:/etc/consul.d
    command: -server -bootstrap
  registry:
    image: registry:2
    restart: always
    ports:
      - 127.0.0.1:5000:5000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/lib/docker/registry:/var/lib/registry
      - /root/.lego/certificates:/root/.lego/certificates
#    environment:
#      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
#      REGISTRY_HTTP_TLS_KEY: /certs/domain.key
#      REGISTRY_AUTH: htpasswd
#      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
#      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
#    networks:
#      - front
#      - back

  drone:
    build:
      context: ./dockerfiles/drone
      dockerfile: Dockerfile
    restart: always
    env_file:
      - /etc/drone/dronerc
    volumes:
      - /var/lib/drone:/var/lib/drone
      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - front
#      - back

  liberty:
    environment:
      APP_ENV: dev
    restart: always
    build:
      context: ./liberty
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    links:
      - registry
      - drone
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /etc/localtime:/etc/localtime:ro
      - /root/.lego/certificates:/root/.lego/certificates
      - /etc/liberty:/etc/liberty
    privileged: true
    depends_on:
      - registry
      - drone
#    networks:
#      - front

